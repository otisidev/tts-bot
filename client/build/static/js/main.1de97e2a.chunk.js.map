{"version":3,"sources":["about/about.jsx","header/header.jsx","footer/footer.jsx","home/home.jsx","serviceWorker.js","index.js"],"names":["About","state","open","showAbout","_this","setState","closeAbout","react_default","a","createElement","Fragment","Button","Group","floated","onClick","this","icon","color","labelPosition","Icon","name","rel","target","href","className","role","aria-hidden","Modal","dimmer","size","onClose","Header","Content","Actions","negative","Component","about","alt","src","Footer","Home","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setLoading","loading","getVoices","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","console","log","JSON","stringify","abrupt","stop","resetApp","selectedVoice","inputModel","audio","handleListen","isFormValid","setConverting","convertText","then","cb","music","document","getElementById","URL","createObjectURL","load","play","catch","alert","_callee2","_context2","method","headers","Accept","Content-Type","input","voice","blob","handleUserInput","event","_event$target","value","defineProperty","handleItemSelection","data","converting","handleFormSubmittion","FileSaver","saveAs","rr","voices","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","_this2","err","_this3","header","Form","error","onSubmit","Field","Dropdown","placeholder","search","selection","onChange","options","TextArea","rows","label","disabled","type","basic","id","footer","Boolean","window","location","hostname","match","ReactDOM","render","home_home","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1de97e2a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nclass About extends Component {\r\n\tstate = { open: false };\r\n\t// open about\r\n\tshowAbout = () => this.setState({ open: true });\r\n\t// close about\r\n\tcloseAbout = () => this.setState({ open: false });\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Button.Group floated=\"right\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={this.showAbout}\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\tcolor=\"purple\"\r\n\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t<Icon name=\"dot circle outline\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\thref=\"https://github.com/otisidev/tts-bot\"\r\n\t\t\t\t\t\tclassName=\"ui icon right labeled button\"\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGithub Repo\r\n\t\t\t\t\t\t<i aria-hidden=\"true\" className=\"github icon\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Button.Group>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tdimmer=\"blurring\"\r\n\t\t\t\t\tsize=\"tiny\"\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.closeAbout}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Modal.Header>About TTS Bot</Modal.Header>\r\n\t\t\t\t\t<Modal.Content>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tDeveloped by Anyacho Chiamaka using IBM Watson Text to speech\r\n\t\t\t\t\t\t\tservices\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<b>Language</b>: JavaScript\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<b>Service</b>: IBM Watson Text2Speech API\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<b>Backend</b>: NodeJs\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<b>Repository</b>: Github\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Modal.Content>\r\n\t\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={this.closeAbout}\r\n\t\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\tnegative\r\n\t\t\t\t\t\t\tcolor=\"grey\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t<Icon name=\"close\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Actions>\r\n\t\t\t\t</Modal>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport About from \"../about/about\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <About />\r\n        <img className=\"ui  tiny image\" alt=\"logo\" src=\"favicon.png\" />\r\n        <h2 className=\"ui purple header\">\r\n          <div className=\"content\">\r\n            Text To Speech Bot\r\n            <div className=\"sub header\">\r\n              The Text to Speech service understands text and natural language\r\n              to generate synthesized audio output complete with appropriate\r\n              cadence and intonation. It is available in 13 voices across 7\r\n              languages. Select voices now offer Expressive Synthesis and Voice\r\n              Transformation features.\r\n            </div>\r\n          </div>\r\n        </h2>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui very padded segment\">\r\n        <div className=\"ui center aligned container\">\r\n          <p>\r\n            Developed by Anyacho Chiamaka using IBM Watson Text to speech\r\n            services | Git repo\r\n            <a\r\n              className=\"ui purple\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/otisidev/tts-bot\"\r\n            >\r\n              &nbsp; here\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../header/header\";\r\nimport Footer from \"../footer/footer\";\r\nimport \"./home.css\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport FileSaver from \"file-saver\";\r\nimport { Dropdown, Form, Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass Home extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvoices: [],\r\n\t\t\tloading: false,\r\n\t\t\tconverting: false,\r\n\t\t\tselectedVoice: \"\",\r\n\t\t\tinputModel: \"\",\r\n\t\t\taudio: \"\",\r\n\t\t\toption: {\r\n\t\t\t\tposition: \"top-right\",\r\n\t\t\t\tautoClose: true,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: false\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setLoading(true);\r\n\t\tthis.getVoices()\r\n\t\t\t.then(cb => {\r\n\t\t\t\tthis.setState({ voices: cb });\r\n\t\t\t\tthis.setLoading(false);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setLoading(false);\r\n\t\t\t\t// toast.error(err.statusText);\r\n\t\t\t});\r\n\t}\r\n\t// loading\r\n\tsetLoading = state => this.setState({ loading: state });\r\n\t// function to get voice from server\r\n\tgetVoices = async () => {\r\n\t\tconst response = await fetch(\"/api/service/voices\");\r\n\t\tconst body = await response.json();\r\n\t\tconsole.log(JSON.stringify(body, null, 6));\r\n\t\t// only for error\r\n\t\t// toast.error(response.statusText, this.state.option);\r\n\t\t// return res body here.\r\n\t\treturn body;\r\n\t};\r\n\r\n\t// reset application\r\n\tresetApp = () => {\r\n\t\tthis.setState({ selectedVoice: \"\" });\r\n\t\tthis.setState({ inputModel: \"\" });\r\n\t\tthis.setState({ audio: \"\" });\r\n\t};\r\n\r\n\t// handle listen button clicked event\r\n\thandleListen = () => {\r\n\t\tif (this.isFormValid()) {\r\n\t\t\tthis.setConverting(true);\r\n\t\t\tthis.convertText()\r\n\t\t\t\t.then(cb => {\r\n\t\t\t\t\tthis.setConverting(false);\r\n\t\t\t\t\tconst music = document.getElementById(\"output\");\r\n\t\t\t\t\tmusic.src = URL.createObjectURL(cb);\r\n\t\t\t\t\tmusic.load();\r\n\t\t\t\t\tmusic.play();\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tthis.setConverting(false);\r\n\t\t\t\t\t// toast.error(\"Failed! Please try again later\", this.state.option);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"Form is invalid!\");\r\n\t\t}\r\n\t};\r\n\t// post to server\r\n\tconvertText = async () => {\r\n\t\tconst response = await fetch(\"/api/service/convert\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tinput: this.state.inputModel,\r\n\t\t\t\tvoice: this.state.selectedVoice\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tconst body = await response.blob();\r\n\t\t// if (response.status !== 200) {\r\n\t\t// \t// toast.error(body.message, this.state.option);\r\n\t\t// \t// throw Error(body.message);\r\n\t\t// }\r\n\r\n\t\treturn body;\r\n\t};\r\n\t// handly user input\r\n\thandleUserInput = event => {\r\n\t\tconst { value, name } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\t// onItemselected\r\n\thandleItemSelection = (event, data) => {\r\n\t\tconst { name, value } = data;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\t// validation\r\n\tisFormValid = () => {\r\n\t\treturn this.state.inputModel !== null || this.state.selectedVoice !== null;\r\n\t};\r\n\t// toggle loading state\r\n\tsetConverting = state => this.setState({ converting: state });\r\n\r\n\t// submit form : Download button clicked\r\n\thandleFormSubmittion = () => {\r\n\t\tif (this.isFormValid()) {\r\n\t\t\tthis.setConverting(true);\r\n\t\t\tthis.convertText()\r\n\t\t\t\t.then(cb => {\r\n\t\t\t\t\tthis.setConverting(false);\r\n\t\t\t\t\tFileSaver.saveAs(cb, \"audio.mp3\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch(rr => {\r\n\t\t\t\t\tthis.setConverting(false);\r\n\t\t\t\t\tconsole.log(rr);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"ui raised very padded text container segment\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<h3 className=\"ui purple header\">Input Text</h3>\r\n\t\t\t\t\t<p className=\"margin\">\r\n\t\t\t\t\t\tThe text language must match the selected voice language: Mixing\r\n\t\t\t\t\t\tlanguage (English text with a Spanish male voice) does not produce\r\n\t\t\t\t\t\tvalid results. The synthesized audio is streamed to the client as it\r\n\t\t\t\t\t\tis being produced, using the HTTP chunked encoding. The audio is\r\n\t\t\t\t\t\treturned in mp3 format which can be played using VLC and Audacity\r\n\t\t\t\t\t\tplayers.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<Form error className=\"m-t\" onSubmit={this.handleFormSubmittion}>\r\n\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t<label>Voice Language</label>\r\n\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t\t\t\tclassName=\"ui purple fluid\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Select Voice-language\"\r\n\t\t\t\t\t\t\t\tsearch\r\n\t\t\t\t\t\t\t\tname=\"selectedVoice\"\r\n\t\t\t\t\t\t\t\tselection\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedVoice}\r\n\t\t\t\t\t\t\t\tonChange={this.handleItemSelection}\r\n\t\t\t\t\t\t\t\toptions={this.state.voices}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t<Form.TextArea\r\n\t\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\t\tname=\"inputModel\"\r\n\t\t\t\t\t\t\tvalue={this.state.inputModel}\r\n\t\t\t\t\t\t\tlabel=\"Input Text\"\r\n\t\t\t\t\t\t\tonChange={event => this.handleUserInput(event)}\r\n\t\t\t\t\t\t\tplaceholder=\"enter the text to be converted ..\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tloading={this.state.converting}\r\n\t\t\t\t\t\t\tdisabled={this.state.loading || !this.isFormValid}\r\n\t\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t\t\t\t\tcolor=\"purple\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDownload\r\n\t\t\t\t\t\t\t<Icon name=\"cloud download\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\tloading={this.state.converting}\r\n\t\t\t\t\t\t\tonClick={this.handleListen}\r\n\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\tthis.state.loading || this.state.converting || !this.isFormValid\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t\t\t\t\tcolor=\"purple\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tListen\r\n\t\t\t\t\t\t\t<Icon name=\"assistive listening systems\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t\t\t\t\tdisabled={this.state.loading || this.state.converting}\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tcolor=\"purple\"\r\n\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\tonClick={this.resetApp}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t<Icon name=\"undo\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<audio id=\"output\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t\t{/* <ToastContainer\r\n\t\t\t\t\tposition=\"bottom-right\"\r\n\t\t\t\t\tautoClose={false}\r\n\t\t\t\t\tnewestOnTop\r\n\t\t\t\t\tcloseOnClick\r\n\t\t\t\t\trtl={false}\r\n\t\t\t\t\tpauseOnVisibilityChange\r\n\t\t\t\t\tdraggable={false}\r\n\t\t\t\t/> */}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Home from \"./home/home\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}